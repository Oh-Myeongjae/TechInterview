LinkedList vs ArrayList

LinkedList 자료구조 : null → 66(head) → 33 → aa → b(tail) → null 
(앞뒤 주소로찾음)
ArrayList 자료구조 :  66(0) → 33(1) → 44(2) → 42(3)
(인덱스로 찾음)                                

1) 조회의 경우 
Array는 index를 통한 해당 데이터를 바로 들고 올 수 있지만! O(1)
Linked는 처음부터 순차적 접근이기 때문에 느리다. O(N)

→ 조회가 많은 경우 Array List를 사용

2) 수정 및 삭제의 경우 
ArrayList경우 배열의 순서를 재배치하는 연산을 수행해  O(N)만큼 연산속도가 걸리기때문에 최대 갯수에 영향을 받지만, 
 LinkedList는 해당 노드의 앞뒤 주소만 바꾸면 되기 때문에 빠른 수행가능.
 searchtime+O(1)

→ 그래서 삽입/ 삭제가 빈번하게 일어나는 프로세스 경우 LinkedList를 사용

소량의 데이터를 가지고 사용할 때는 사실 큰 차이가 없지만,
정적인 데이터를 활용하면서 조회가 빈번하다면 ArrayList를 사용하는 것이 좋고,동적으로 추가/삭제 요구사항이 빈번하다면 LinkedList를 사용하는 것이 좋다.
