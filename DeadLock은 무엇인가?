/*
DB Deadlock
일반적으로 DeadLock(교착상태)을 설명하자면, 둘 이상의 프로세스가 다른 프로세스가 점유하고 있는 자원을 서로 기다릴 때 무한 대기에 빠지는 상황을 말한다.
DB에서의 데드락은 두 트랜잭션이 각각 Lock을 정하고 다음 서로의 Lock에 접근하여 값을 얻어오려고 할 때 
이미 각각의 트랜잭션에 의해 Lock이 설정되어 있기 때문에 양쪽 트랜잭션 모두 영원히 처리가 되지않게 되는 상태를 말한다.
즉, DB Deadlock은 상대방이 소유하고 있는 Lock을 요청해서 작업의 처리를 진행하지 못하는 상태다.

📌왜 DB에서는 데드락을 일으킬지도 모르는 Lock을 사용할까?
DataBase는 데이터를 영속적으로 저장하고 있는 시스템이다. 이런 시스템은 같은 자원(데이터)에 대해서 동시에 접근하는 경우가 생길 수 밖에 없고,
이럴 경우 데이터가 오염 될 수 있는데 그렇게 되지 않도록 데이터의 일관성과 무결성을 유지해야할 필요가 있다.
예를 들어 수강신청 시스템에서 1명만이 정원으로 남게되었는데, 2사람이 거의 동시에 버튼을 누른 경우, 성공은 1명만 되야한다.
즉, 동시성 제어으로 인해 트랜잭션 명령들 간의 끼어들기가 가능한 상황에서 서로 간섭 없이 독립적으로 수행되어 하기 때문에, 
DBMS(DataBase Management System)가 사용하는 공통적인 방법이 Lock인 것이다.

잠금(Locking)은 트랜잭션의 실행 순서를 강제로 제어하여 직렬 가능한 스케줄이 되도록 보장한다. 
하지만 lock과 unlock을 잘못 사용하면 데드락 상태에 빠질 수 있는 것이다
*/
